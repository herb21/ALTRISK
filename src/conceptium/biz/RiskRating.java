/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package conceptium.biz;

import com.alee.laf.WebLookAndFeel;
import static conceptium.biz.Incident.cboEmployeeNumber;
import static conceptium.biz.Incident.txtIdNumber;
import static conceptium.biz.Incident.txtName;
import static conceptium.biz.Incident.txtSurname;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.List;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author MathomeTD
 */
public class RiskRating extends javax.swing.JFrame {

    /**
     * Creates new form RiskRating
     */
    private static RiskRating obj = null;
    private RiskRating() {
        setUndecorated(true);
        setResizable(true);
        initComponents();
        reference();
    }
   private void reference(){
        String sql ="Select * from Incident";
            try (Connection con = DriverManager.getConnection("jdbc:derby:Incident","herbert","elsie1*#");
                PreparedStatement pst = con.prepareStatement(sql);){
                ResultSet rs = pst.executeQuery();
                while(rs.next()){
                    String ID = rs.getString("ReferenceNumber");
                    cboReference.addItem(ID.trim());
                }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
    }
   public static RiskRating getObj(){
            if (obj == null){
                obj = new RiskRating();
            }
            return obj;
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cboProbaility = new javax.swing.JComboBox();
        cboFrequency = new javax.swing.JComboBox();
        cboSeverity = new javax.swing.JComboBox();
        txtDescription = new javax.swing.JTextField();
        txtValue1 = new javax.swing.JTextField();
        txtFrequency = new javax.swing.JTextField();
        txtValue2 = new javax.swing.JTextField();
        txtProbability = new javax.swing.JTextField();
        txtValue3 = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCat = new javax.swing.JTextField();
        txtRange = new javax.swing.JTextField();
        txtResult = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtWitnessStatement = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        txtUpload = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        cboReference = new javax.swing.JComboBox();
        txtUpload1 = new javax.swing.JTextField();
        txtUpload3 = new javax.swing.JTextField();
        txtUpload2 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Severity (Most likely outcome of the incident):");

        jLabel2.setText("Frequency ( Amount of exposure to the risk):");

        jLabel3.setText("Probability ( Likelihood of most outcome occuring):");

        cboProbaility.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Make a Selection", "Certain to occur", "Significant change, very possible", "Possible may occur", "Not likely to occur", "Extremely unlikely, rare" }));
        cboProbaility.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboProbailityItemStateChanged(evt);
            }
        });
        cboProbaility.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboProbailityActionPerformed(evt);
            }
        });

        cboFrequency.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Make a Selection", "Continuous", "Frequent", "Very possible", "Infrequent", "Very rarely", " " }));
        cboFrequency.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboFrequencyItemStateChanged(evt);
            }
        });
        cboFrequency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboFrequencyActionPerformed(evt);
            }
        });

        cboSeverity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Make a Selection", "Disaster", "Serious Loss", "Some loss / Demage", "Minor loss / Demage", "No down time or demage" }));
        cboSeverity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboSeverityItemStateChanged(evt);
            }
        });
        cboSeverity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSeverityActionPerformed(evt);
            }
        });

        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        jLabel4.setText("Risk Assessment ( S + F + P ) :");

        jLabel5.setText("Category :");

        jLabel6.setText("Range:");

        jLabel7.setText("Result:");

        txtCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCatActionPerformed(evt);
            }
        });

        txtResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResultActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Employee Number", "Role", "Designation","Email Address"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel8.setText("Investigation Team:");

        txtWitnessStatement.setColumns(20);
        txtWitnessStatement.setRows(5);
        jScrollPane2.setViewportView(txtWitnessStatement);

        jLabel9.setText("Attach Additional Documents:");

        jLabel10.setText("Witness Statement(s):");

        jButton2.setText("Select  file");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dbase/Resources/save.png"))); // NOI18N
        jButton1.setText("Add Risk Rating");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dbase/Resources/close.png"))); // NOI18N
        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel11.setText("Reference Number:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 214, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboReference, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton3))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboReference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)))
                .addGap(4, 4, 4))
        );

        txtUpload1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUpload1ActionPerformed(evt);
            }
        });

        jButton4.setText("Select  file");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Select  file");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Select  file");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cboFrequency, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboSeverity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboProbaility, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtRange, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                            .addComponent(txtTotal))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel7)
                                                .addGap(18, 18, 18)))))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                                            .addComponent(txtFrequency)
                                            .addComponent(txtProbability))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtValue2)
                                            .addComponent(txtValue3)
                                            .addComponent(txtValue1)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtResult)
                                            .addComponent(txtCat)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtUpload3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUpload2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUpload1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUpload))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(4, 4, 4))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboSeverity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValue1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboFrequency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFrequency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValue2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cboProbaility, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProbability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValue3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(txtCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(txtUpload, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUpload1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUpload2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUpload3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 47, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 33, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String sql = "insert into RiskRatings(ReferenceNumber, Severity, Description, value1,"+
                "Frequency, FrequencyDescription,Value2,Probability,probabilityDescription,Value3,"+
                "RiskAssessmentTotal,Category,Range,Results,WitnessStatement,SupportingDocument1,"+
                "SupportingDocument2,SupportingDocument3,SupportingDocument4)"+
                "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
        String reference = cboReference.getSelectedItem().toString();
        String severity = cboSeverity.getSelectedItem().toString();
        String description = txtDescription.getText();
        String value1 = txtValue1.getText();
        String frequency = cboFrequency.getSelectedItem().toString();
        String freqDesc = txtFrequency.getText();
        String value2 = txtValue2.getText();
        String probability = cboProbaility.getSelectedItem().toString();
        String probDesc = txtProbability.getText();
        String value3 = txtValue3.getText();
        String riskAssessment = txtTotal.getText();
        String category = txtCat.getText();
        String range = txtRange.getText();
        String results = txtResult.getText();
        String witnessStatement = txtWitnessStatement.getText();
        try{
            Connection con = DriverManager.getConnection("jdbc:derby:Incident","herbert","elsie1*#");
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, reference);
            pst.setString(2, severity);
            pst.setString(3, description);
            pst.setString(4, value1);
            pst.setString(5, frequency);
            pst.setString(6, freqDesc);
            pst.setString(7, value2);
            pst.setString(8, probability);
            pst.setString(9, probDesc);
            pst.setString(10, value3);
            pst.setString(11, riskAssessment);
            pst.setString(12, category);
            pst.setString(13, range);
            pst.setString(14, results);
            pst.setString(15, witnessStatement);
            String path = filename;
            String newpath = path.replace('\\', '/');
            File supportDoc1 = new File(newpath);
            FileInputStream evidence1 = new FileInputStream(supportDoc1);
            pst.setBinaryStream(16, evidence1);
            String path2 = filename1;
            String newpath2 = path2.replace('\\', '/');
            File supportDoc2 = new File(newpath2);
            FileInputStream evidence2 = new FileInputStream(supportDoc2);
            pst.setBinaryStream(17, evidence2);
            String path3 = filename2;
            String newpath3 = path3.replace('\\', '/');
            File supportDoc3 = new File(newpath3);
            FileInputStream evidence3 = new FileInputStream(supportDoc3);
            pst.setBinaryStream(18, evidence3);
            String path4 = filename3;
            String newpath4 = path4.replace('\\', '/');
            File supportDoc4 = new File(newpath4);
            FileInputStream evidence4 = new FileInputStream(supportDoc4);
            pst.setBinaryStream(19, evidence4);
            pst.executeUpdate();
            //JOptionPane.showMessageDialog(RiskRating.this, "Risk rating for"+" "+reference+" "+"successfully saved");
        }
        catch(SQLException | FileNotFoundException e){
            JOptionPane.showMessageDialog(RiskRating.this, e);
        }
        Properties props = new Properties();
        //props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.host", "mail.conceptium.biz");
        //props.put("mail.smtp.socketFactory.port", "465");
        //props.put("mail.smtp.SocketFactory.class", "javax.net.ssl.SSLSocketFactory");
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.auth", "true");
        //props.put("mail.smtp.port", "465");
        
        Session session = Session.getDefaultInstance(props,
        new javax.mail.Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication(){
             return new PasswordAuthentication("herbert@conceptium.biz", "Kaylad1*#");
                    }
              });
        String search = "select Emails from Teams where RiskCategory = ?";
        try{
            List list = new List();
            Connection con = DriverManager.getConnection("jdbc:derby:Incident","herbert","elsie1*#");
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, search);
            ResultSet rs = pst.executeQuery();
            if(rs.next()){
                String email = rs.getString("EmailAddress");
                list.add(email);
            }
        }catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(RiskRating.this, e);
        }
        String GroupA = "herbert@conceptium.biz";
        //Address[] cc = new Address[] {InternetAddress.parse("abc@abc.com"),
                               //InternetAddress.parse("abc@def.com"), 
                               //InternetAddress.parse("ghi@abc.com")};
        //message.addRecipients(Message.RecipientType.CC, cc);
        //String site = txtSite.getText();
        //String supervisor = txtSupervisor.getText();
        //String department = txtDepartment.getText();
        //String employee = txtName.getText();
        //String description = txtDescription.getText();
        try {
            Message msg = new MimeMessage(session);
            msg.setFrom(new InternetAddress("herbert@conceptium.biz"));
            //msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(GroupA));
            msg.addRecipients(Message.RecipientType.CC, InternetAddress.parse("herbertd@mathometd.com,molokgobi@yahoo.com,herbert@conceptium.biz"));
            msg.setSubject("Learnings from Incident" + reference);
            msg.setText("Dear  Employee . Please note there was an+ incident that occured with the following details."+
                 "An incident"+" "+reference + "with risk assessment score "+ " "+riskAssessment+" "+"and a category"+" "+category+"."+
                    "The recommended action is "+" "+results+" "+"under the supervision of"+" "+category+" "+ "incurred"+" "+description+
                    " and the following learnings were learnt"+" "+"\n"+
                    "Key Learnings"+"\n"+category+
                    " "+ "  " + "\n"+"\n"+"Regards");
            Transport.send(msg);
            
            JOptionPane.showMessageDialog(RiskRating.this, "Record successfully saved and investigation team notified  " + GroupA + "." );
        }
        catch(MessagingException | HeadlessException e){
            JOptionPane.showMessageDialog(RiskRating.this, e);
        }
        this.dispose();
        IncidentAnalysis.getObj().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser x = new JFileChooser();
        x.showOpenDialog(RiskRating.this);
        File f = x.getSelectedFile();
        filename3 = f.getAbsolutePath();
        txtUpload3.setText(filename3);
        String path = filename3;
        String newpath = path.replace('\\', '/');
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cboSeverityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSeverityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboSeverityActionPerformed

    private void cboSeverityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboSeverityItemStateChanged
        cboFrequency.setEnabled(true);
        String select = cboSeverity.getSelectedItem().toString();
        try{
            Connection con = DriverManager.getConnection("jdbc:derby:Incident","herbert","elsie1*#");
            PreparedStatement pst = con.prepareStatement("Select * from RiskRating where Description = ?");
            pst.setString(1, select);
            ResultSet rs = pst.executeQuery();
            if (rs.next()){
                String name = rs.getString("Description");
               txtDescription.setText(name.trim());
                String surname = rs.getString("Value");
                txtValue1.setText(surname.trim());
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(RiskRating.this, e);
        }
    }//GEN-LAST:event_cboSeverityItemStateChanged

    private void cboFrequencyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboFrequencyItemStateChanged
        cboProbaility.setEnabled(true);
        String select = cboFrequency.getSelectedItem().toString();
        try{
            Connection con = DriverManager.getConnection("jdbc:derby:Incident","herbert","elsie1*#");
            PreparedStatement pst = con.prepareStatement("Select * from RiskRating where Description = ?");
            pst.setString(1, select);
            ResultSet rs = pst.executeQuery();
            if (rs.next()){
                String name = rs.getString("Description");
               txtFrequency.setText(name.trim());
                String surname = rs.getString("Value");
                txtValue2.setText(surname.trim());
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(RiskRating.this, e);
        }
    }//GEN-LAST:event_cboFrequencyItemStateChanged

    private void cboProbailityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboProbailityItemStateChanged
        String select = cboProbaility.getSelectedItem().toString();
        try{
            Connection con = DriverManager.getConnection("jdbc:derby:Incident","herbert","elsie1*#");
            PreparedStatement pst = con.prepareStatement("Select * from RiskRating where Description = ?");
            pst.setString(1, select);
            ResultSet rs = pst.executeQuery();
            if (rs.next()){
                String name = rs.getString("Description");
               txtProbability.setText(name.trim());
                String surname = rs.getString("Value");
                txtValue3.setText(surname.trim());
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(RiskRating.this, e);
        }
        
        int A = Integer.parseInt(txtValue1.getText());
        int B =  Integer.parseInt(txtValue2.getText());
        int C = Integer.parseInt(txtValue3.getText());
        int sum = A+B+C;
        txtTotal.setText(String.valueOf(sum));
        if(sum <= 60){
            txtCat.setText("Category 1: Minor Risk");
            txtCat.setBackground(Color.green);
            txtRange.setText("30 to 60");
            txtResult.setText("Forward report as designated");
        }
        if(sum >= 60 && sum <=  90 ){
            txtCat.setText("Category 2: Moderate / Medium Risk");
            txtCat.setBackground(Color.red);
            txtRange.setText("70 to 90");
            txtResult.setText("Do HIRA review ");
        }
        if(sum > 90){
            txtCat.setText("Category 3: High Serious Risk");
            txtCat.setBackground(Color.red);
            txtRange.setText("90 to 150");
            txtResult.setText("Do HIRA review : Corrective Action to be taken immediately");
        }
            
        String category = txtCat.getText();
        String sql = "select EmployeeId as Employee_Number, Name, Surname, Role , Email from Teams where RiskCategory = ?";
        try{
                Connection con = DriverManager.getConnection("jdbc:derby:Incident","herbert","elsie1*#");
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, category);
                ResultSet rs = pst.executeQuery();
                while(rs.next()){
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(RiskRating.this, e);
        }
        
        //Create group for High Priority Incidents
    }//GEN-LAST:event_cboProbailityItemStateChanged

    private void cboFrequencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboFrequencyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboFrequencyActionPerformed

    private void cboProbailityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboProbailityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboProbailityActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void txtResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtResultActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        cboProbaility.setEnabled(false);
        cboFrequency.setEnabled(false);
    }//GEN-LAST:event_formWindowActivated

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        JFileChooser x = new JFileChooser();
        x.showOpenDialog(RiskRating.this);
        File f = x.getSelectedFile();
        filename1 = f.getAbsolutePath();
        txtUpload1.setText(filename1);
        String path = filename1;
        String newpath = path.replace('\\', '/');
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        JFileChooser x = new JFileChooser();
        x.showOpenDialog(RiskRating.this);
        File f = x.getSelectedFile();
        filename2 = f.getAbsolutePath();
        txtUpload2.setText(filename2);
        String path = filename2;
        String newpath = path.replace('\\', '/');
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        JFileChooser x = new JFileChooser();
        x.showOpenDialog(RiskRating.this);
        File f = x.getSelectedFile();
        filename = f.getAbsolutePath();
        txtUpload.setText(filename);
        String path = filename;
        String newpath = path.replace('\\', '/');
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txtCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCatActionPerformed

    private void txtUpload1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUpload1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUpload1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RiskRating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RiskRating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RiskRating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RiskRating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RiskRating().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboFrequency;
    private javax.swing.JComboBox cboProbaility;
    public static javax.swing.JComboBox cboReference;
    private javax.swing.JComboBox cboSeverity;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCat;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtFrequency;
    private javax.swing.JTextField txtProbability;
    private javax.swing.JTextField txtRange;
    private javax.swing.JTextField txtResult;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtUpload;
    private javax.swing.JTextField txtUpload1;
    private javax.swing.JTextField txtUpload2;
    private javax.swing.JTextField txtUpload3;
    private javax.swing.JTextField txtValue1;
    private javax.swing.JTextField txtValue2;
    private javax.swing.JTextField txtValue3;
    private javax.swing.JTextArea txtWitnessStatement;
    // End of variables declaration//GEN-END:variables
private String filename;
private String filename1;
private String filename2;
private String filename3;
}
